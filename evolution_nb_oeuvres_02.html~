<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>ADONA oeuvres</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
		<script src="https://d3js.org/d3-geo.v1.min.js"></script>
		<script src="https://d3js.org/d3-geo-projection.v2.min.js"></script>
		<script src="js/d3.slider.js"></script><!-- http://github.com/turban/d3.slider -->
		<link rel="stylesheet" type="text/css" href="css/style.css">
		<link rel="stylesheet" type="text/css" href="css/d3.slider.css">
	</head>
    <body>
        <div id="map"></div>
        <div id="slider"></div>
        
        <script type="text/javascript">
            var w = 960;
            var h = 500;
        
            var svg = d3.select('#map')
                .append('svg')
                .attr('width', w)
                .attr('height', h);
                
            var projection = d3.geoRobinson()
                .scale(150);
                
            var path = d3.geo.path()
                .projection(projection);
                
            // calculate radius of proportional circles
            var calc_radius = function (d) {
            	var rayon = 3 * Math.sqrt(d/Math.PI);
            	return rayon;
            }
                
            // adding countries from Natural Earth  
            d3.json('data/ne_110m_admin_0_countries.json', function (json) {
            	svg.selectAll('path')
            	   .data(json.features)
            	   .enter()
            	   .append('path')
            	   .attr('d', path)
            	   .attr('class', 'pays');
            });
            
            // adding ADONA sites
            d3.json('data/evolution_nb_oeuvres_cumul.json', function (json) {
            	svg.selectAll('circle')
            	   .data(json.features)
            	   .enter()
            	   .append('circle')
            	   .attr('r', 0)
            	   .attr('cx',function(d) { return projection(d.geometry.coordinates)[0]})
            	   .attr('cy',function(d) { return projection(d.geometry.coordinates)[1]})
            	   .attr('class', 'site')
            	   .on('mouseover', function (d) {
        	       	   svg.append('div')
        	       	       .attr("class", "tooltip")
        	       	       .attr('width', 100)
        	       	       .attr('height', 100)
        	       	       .attr('x', function() { return projection(d.geometry.coordinates)[0] })
        	       	       .attr('y', function() { return projection(d.geometry.coordinates)[1] })
        	       	       .html( d.properties.nom_site + ' : <br>' + d.properties[d3.select(this).text()] + ' oeuvre(s)' );
            	   })
            	   .on("mouseout", function(d) {
                       svg.selectAll('.tooltip')
                         .transition()
                         .duration(500)
                         .style("opacity", 0)
                   });
            });
            
            // creating slider
            d3.select('#slider')
                .call(d3.slider().axis(true).min(1910).max(2020).step(10)
                // if slider value changes
                .on("slide", function (evt, value) {
            	   svg.selectAll("circle")
            	       // set corresponding column name from json as text to retrieve it easily for tooltips
            	       .text('oeuvres_' + (value-10) + '_' + (value-1))
            	       // column name from point geojson looks like this : oeuvre_1910_1919
            	       .transition()
            	       .duration(500)
            	       .attr('r', function(d){
            	           colname = 'oeuvres_' + (value-10) + '_' + (value-1);
            	           return calc_radius(d.properties[colname])
            	       })
                })
            );
            
        </script>
    </body>
</html>